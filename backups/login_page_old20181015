import 'package:flutter/material.dart';

class LoginPage extends StatefulWidget {

  @override
    State<StatefulWidget> createState() => new _LoginPageState();
}

enum FormType {
  login,
  register
}

class _LoginPageState extends State<LoginPage>{

  final formKey = new GlobalKey<FormState>();
  String _email;
  String _password;
  FormType _formType = FormType.login;


  void moveToRegister(){
    formKey.currentState.reset();
    setState(() {
       _formType = FormType.register;   
      });
    
  }

  void moveToLogin(){
    formKey.currentState.reset();
    setState(() {
       _formType = FormType.login;   
      });
  }

  @override
    Widget build(BuildContext context) {
      return new Scaffold(
        appBar: new AppBar(
          title: new Text('Gig-O-Matic', 
            style: new TextStyle(color: Colors.black, fontSize: 30.0)),
          backgroundColor: Color.fromRGBO(150, 248, 157, 1.0),
          
          ),  
          body: new Container(
            padding: EdgeInsets.all(16.0),
            color: Color.fromRGBO(150, 248, 157, 1.0),
            child: new Form(
              key: formKey,
              child: new Column(
                crossAxisAlignment: CrossAxisAlignment.stretch,
                children: buildInputs() + buildSubmitButtons(),
              ),
              )
          )
      );
    }

    List<Widget> buildInputs() {
      return [
        new TextFormField(
          decoration: new InputDecoration(labelText: 'Email '),
          validator: (value) => value.isEmpty ? 'Email can\'t be empty' : null,
          onSaved: (value) => _email = value,
        ),
        new TextFormField(
          decoration: new InputDecoration(labelText: 'Password'),
          obscureText: true,  
          validator: (value) => value.isEmpty ? 'Password can\'t be empty' : null,
          onSaved: (value) => _password = value,
        ),
      ];
    }

    List<Widget> buildSubmitButtons(){
      if (_formType == FormType.login){
        return [
          new RaisedButton(
            child: new Text('Login', style: new TextStyle(fontSize: 20.0)),
            
          ),
          new FlatButton(
            child: new Text('Create an Account', style: new TextStyle(fontSize: 20.0)),
            onPressed: moveToRegister,
          )
        ];
      } else {
        return [
          new RaisedButton(
            child: new Text('Create an Account', style: new TextStyle(fontSize: 20.0)),
            
          ),
          new FlatButton(
            child: new Text('Have an account? Login.', style: new TextStyle(fontSize: 20.0)),
            onPressed: moveToLogin,
          )
        ];
      }
    }
} 